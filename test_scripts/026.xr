fn map<T, V>(xs: Array<T>, f: (T) -> (V)) -> Array<V> {
    fn helper(input_idx: int, output: Stack<V>)->Stack<V> {
        (input_idx == xs.len()).if(
            output,
            helper(input_idx+1, output.push(f(xs.get(input_idx))))
            )
    }
    let output_stk = stack();
    helper(0, output_stk).to_array()
}

fn inverse(x: int) -> rational {
    1 / x
}


fn main()->bool {
    assert(map([1,9,3,7], inverse) == [1.0, 1/9, 1/3, 1/7]);
}
