fn try<T, R>(arr: Sequence<T>, func: (T)->(R))->R{
    fn helper(i: int)->R {
        let err = func(arr[i]);
        if_error(err,
            if(i+1 == arr.len(), err, helper(i+1))
        )
    }
    helper(0)
}

fn main()->bool{
    let arr = [1, 3, 6, 8, 5, 4];
    let op = (x: int) -> {if(x%4 == 0, (x/4), error('foo '+x.to_str()))};

    assert(try(arr, op) == 2.0)
}