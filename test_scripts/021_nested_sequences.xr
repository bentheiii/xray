fn mults_helper(m: int, n: int, ret: Sequence<int>) -> Sequence<int> {
    (n==0).if(
        ret,
        mults_helper(m, n-1, [m*n] + ret)
    )
}
fn multiples(m: int, cols: int) -> Sequence<int> {
    mults_helper(m, cols, [])
}

fn mt_h(x:int, y:int, ret:Sequence<Sequence<int>>) -> Sequence<Sequence<int>> {
    (x==0).if(
        ret,
        mt_h(x-1, y, [multiples(x,y)] + ret)
    )
}

fn mlt_table(x:int)->Sequence<Sequence<int>> {
    mt_h(x, x, [])
}

fn main()->bool{
    assert(mlt_table(5) == [
        [1,2,3,4,5],
        [2,4,6,8,10],
        [3,6,9,12,15],
        [4,8,12,16,20],
        [5,10,15,20,25]
    ])
}